Created by BUckus on 6/1/2022

This is a concept file with following syntax for each concept.

# Login With Manually Entering Code
* Click to element "emailForCode"
* "Ayhan.Kaya@ligabet.com" textini "emailForCode" elemente yaz
* Click to element "sendMeCode"
* "50" saniye bekle
* Click to element "gotIstButton"

# Open Test environment
* Wait "10" seconds
//* Wait for element then click "gotItButton"
* Check if element "registerButton" exists
* Check if element "loginButton" exists

# Login Account
* Click to element "loginButton"
* Wait "1" seconds
* Click to element "loginUserNameArea"
* Write value "iqra.manzoor@ligastavok.ru" to element "loginUserNameArea"
* Click to element "loginPasswordArea"
* Write value "123456789" to element "loginPasswordArea"
* Click to element "loginButtonArea"
* Wait "2" seconds


# Login Account to Equador country
* Click to element "loginButton"
* Wait "1" seconds
* Click to element "loginUserNameArea"
* Write value "iq.manzoor92@gmail.com" to element "loginUserNameArea"
* Wait "2" seconds
* Click to element "loginPasswordArea"
* Write value "123456789" to element "loginPasswordArea"
* Click to element "loginButtonArea"
* Wait "2" seconds

# Register Page Open
* Check if element "CreateAccountButton" exists
* Wait "5" seconds
* "CreateAccountButton" element click
//* Wait "5" seconds


//# Register New Account

* Check if element "phoneNumberTextField" exists
* Write random Int value to element "phoneNumberTextField"
//* Enter phone number "phoneNumberTextField" and "123456789"
* Wait "5" seconds
* Click to element "currency"
* Click to element "currencyDollar"
//* Send the phone number "phoneNumberTextField"
//* Write value "123456789" to element "phoneNumberTextField"
//* Pick the one of elements "currency" randomly
* Wait "5" seconds
//* Click to element "email"

* Check if element "email" exists
* Find element by "email" clear and send keys  random email
* Wait "5" seconds
* Check if element "firstNameInput" exists
* Click to element "firstNameInput"
* Write random Alpha value to element "firstNameInput" starting with "test"
* Write random Alpha value to element "lastNameInput" starting with "testinium"
* Write date values  "8" to element "dateOfBirthDay"
* Write date values  "Aralık" to element "dateOfBirthMonth"
* Write date values  "1992" to element "dateOfBirthYear"
* Write values "1q2w3e4r5t" to element "registerPassword"
//* Write values "1q2w3e4r5t" to element "registerPasswordRepeat"
//* Pick the one of elements "phoneNumberZoneCode" randomly
//* Click to element "phoneNumberZoneCode"
//* Wait "5" seconds
//* Click to element "zoneCode"
//* Click to element "phoneNumberTextField"
//* Click to element "nationality"
//* Pick the one of elements "nationalityCountry" randomly
//* Click to element "nationalityCountry"
* Click to element "acceptCheckBox"
* Click to element "registerNowButton"
//* "welcomeLabel" elementi "WELCOME" değerini içeriyor mu kontrol et
* Wait "10" seconds

# Place Single Bet
* "5" saniye bekle
* Elementine tıkla "betChoose"
* "5" saniye bekle
* Elementine tıkla "betAcceptButton"


# Place a Combi Bet
* "5" saniye bekle
* Elementine tıkla "betChoose"
* "5" saniye bekle
* Elementine tıkla "combiBetItem"
* "5" saniye bekle
* Elementine tıkla "betAcceptButton"

# Open My account
* "customerMenu" elementin üstünde bekle
* Elementine tıkla "myAccount"

# My Bets
* Check if element "bettingHistory" exists
* Click to element "bettingHistory"
* Check if element "bettingHistoryLabel" contains text "BETTING HISTORY"

# Transactions Bookings
* Check if element "bookingsButton" exists
* Click to element "bookingsButton"
* Check if element "bookingsLabel" contains text "BOOKINGS"
* Wait "1" seconds

# Transactions Deposit
* Check if element "depositPageButton" exists
* Click to element "depositPageButton"
* Check if element "depositPageLabel" contains text "PAYMENT - DEPOSIT"
* Wait "1" seconds

# Transactions Withdrawal
* Check if element "withdrawalPageButton" exists
* Click to element "withdrawalPageButton"
* Check if element "withdrawalPageLabel" contains text "PAYMENT - WITHDRAWAL"
* Wait "1" seconds

# My Accounts Account Settings Personal Details
* Check if element "personalDetails" exists
* Click to element "personalDetails"
* Check if element "customerInfo" contains text "CUSTOMER INFO"
* Wait "1" seconds

# My Account Upload Documents
* Check if element "documents" exists
* Click to element "documents"
* Check if element "uploadDocuments" contains text "UPLOAD DOCUMENT"
* Upload file in project "src/test/resources/image/test.jpg" to element "uploadDocumentsFileZone"
* Wait "10" seconds
* Wait for element then click "uploadDocumentsButton"

# New Password
* Elementine tıkla "changePass"
* "password1" textini "currentPass" elemente yaz
* "Password2" textini "newPass" elemente yaz
* "Password2" textini "repeatNewPass" elemente yaz
* Elementine tıkla "saveButton"

# Logout
* "customerMenu" elementin üstünde bekle
* Elementine tıkla "logOut"

# Old Password
* Elementine tıkla "changePass"
* "Password2" textini "currentPass" elemente yaz
* "password1" textini "newPass" elemente yaz
* "password1" textini "repeatNewPass" elemente yaz
* Elementine tıkla "saveButton"

# Login With New Password
* Click to element "loginButton"
* "1" saniye bekle
* Click to element "loginUserNameArea"
* "trest" textini "loginUserNameArea" elemente yaz
* "2" saniye bekle
* Click to element "loginPasswordArea"
* "Password2" textini "loginPasswordArea" elemente tek tek yaz
* Click to element "loginButtonArea"

# Open My Account Logged Account
* "customerMenu" elementin üstünde bekle
* "1" saniye bekle
* Elementine tıkla "myAccount"

# Open Bet Settings 
* Wait for element then click "betSettings"
* Check if element "betSettingsLabel" contains text "BET SETTINGS"

# Enter New Default Stake
* Clear text of element "defaultStake"
* Write value "150" to element "defaultStake"
* Wait for element then click "defaultStakeSave"

# Open Main Page
* Wait for element then click "mainPage"

# Enter Old Default Stake
* Clear text of element "defaultStake"
* Write value "100" to element "defaultStake"
* Wait for element then click "defaultStakeSave"

# Change Odd Value Changes
* Click to element "oddValueChanges"
* "oddValueChangesList" menu listesinden rasgele seç
* Wait "10" seconds
* Click to element "oddValueChangesSave"

# Choose to Payment Method with <key>
* Wait for element then click <key>

# Enter Amount
* Wait for element then click "transactionAmount"
* Wait "5" seconds
* Save Low amount "minAmount" and Write Amount "transactionAmount"

# Enter Amount For Dollar
* Wait for element then click "transactionAmount"
* Wait "5" seconds
* Save Low dollar amount "minAmount" and Write Amount "transactionAmount"

# Get list of payment method for selection <key>
* Deposit payment get from list then click <key>

# Select Payment Method with <key>
* Click Deposit Monnet Bank <key>

# Click on amount field <key>
* Wait for element then click <key>


# Genarete Random Deposit Value and Enter that value
* Wait for element then click "transactionAmount"
* Wait "5" seconds
* Genarete random number for Deposit "minAmount" and "highAmount", and saved the number "randomNumber". And write the saved key to the "transactionAmount" element
//* Get Amount from list "getAmountFromList"
Run below for hard code random number
//* Genarete random number and saved the number "randomNumber". And write the saveKey to the "depositAmount" element
* Wait "5" seconds

# Genarete Random Transaction Value and Enter The Value
* Wait for element then click "transactionAmount"
* Wait for element then click "blockAmount"
* Wait "2" seconds
* Genarete random number for Withdrawal "minAmountInAPSWithdrawal" and "payableAmountInAPSWithdrawal", and saved the number "randomNumber". And write the saved key to the "transactionAmount" element
* Wait "5" seconds

# Genarete Random Transaction Value and Enter The Value For Monnet WithDrawal
* Wait for element then click "transactionAmount"
//* Wait for element then click "blockAmount"
* Wait "2" seconds
* Generate Monnet WithDrawal Random Number "minAmount" and "highAmount",and saved the number "randomNumber". And write the saved key to the "transactionAmount" element
* Wait "5" seconds

# Select the Identity Type and Enter the Identity Number
* Wait for element then click "identityTypeInDepositPage"
* Wait "2" seconds
* Pick the one of elements "listOfIdentityTypeInDepositPage" randomly excluding first option
* Write value "111111111" to element "identityNumber"

# Select the Bank Type and Enter the Account Number
* Wait for element then click "bankCodeInWithdrawalPage"
* Wait "2" seconds
* Pick the one of elements "listOfBankCodeInWithdrawalPage" randomly excluding first option
* Write value "4051885600446623" to element "bankAccountNumber"

# Select the Identity Type and Enter the Account Number
* Wait for element then click "identityTypeInWithdrawalPage"
* Wait "2" seconds
* Pick the one of elements "listOfIdentityTypeInWithdrawalPage" randomly excluding first option
* Write value "111111111" to element "identityNumber"

# Select the Identity Type and Enter the Identity Number For Monnet
* Wait for element then click "identityTypeInWithdrawalPage"
* Wait "2" seconds
* Pick the one of elements "listOfIdentityTypeInWithdrawalPage" randomly excluding first option For Condition and write identity number "identityNumber"

# Continue To Transaction
* Wait "2" seconds
* Wait for element then click "continueBtnInWithdrawal"
* Wait "5" seconds

# Continue To Transaction For Deposit
* Wait for element then click "continueBtnInWithDeposit"
* Wait "5" seconds

# Click on Perform Payment
* Wait for element then click "performPayment"
* Wait "5" seconds

# Compare the deposit amount <saveKey> to the value in payment method <saveKeyy> by replaced text <key>
* Get text by <key> and replace the symbols than save the text <saveKeyy>
* Compare saved key <saveKey> contains the other saved key <saveKeyy> of element


# Select the bank option for Bank Method
* scroll to the element "bankOptionForBankMonnet" be visible
* Wait for element then click "bankOptionForBankMonnet"
//* Find element by "rutInfoForBankMonnet" clear and send keys "111111111"
* Wait "2" seconds
* Write value "111111111" to element "rutInfoForBankMonnet", if the element exists
* Write value "1234" to element "passwordForBankMonnet"
* Wait for element then click "continueToPaymentPageBankMonnet"
* Wait "10" seconds
* Wait for element then click "continueToPaymentPageBankMonnet"
* Wait "6" seconds
//* Write value "1" to element "activationCodeForMonnetBankMethod1"
* Send the text to the defined Activation Code field with wrapper "activationCodeWrapperForMonnetBankMethod"
* Wait for element then click "continueToPaymentPageBankMonnet"
* Wait "2" seconds
* Send the text to the card Code "cardCodeA1","cardCodeB1",and "cardCodeC1"
* Wait for element then click "continuarAfterCode"
* Write value "123456" to element "claveCode"
* Wait for element then click "continuarAfterCode"

# Select to the <paymet> option for deposit method
* Wait for element then click <paymet>

# Select the bank option and enter bank card info <cardnumber> for debit
* Wait for element then click "bankListForDebitMonnet"
* Wait "2" seconds
* Wait for element then click "bankOptionForDebitMonnet"
//* Pick the one of elements "bankOptionForDebitMonnet" randomly
* Write value <cardnumber> to element "cardNumberForDebitMonnet"
* Wait for element then click "pagarButtonToContinuePayment"

# Select to the credit option for deposit method
* Wait for element then click "selectCredito"

# Enter Credit Card İnformation with <cardnumber>, <cvvNumber> and <cardexpiration> monnet
* Wait "10" seconds
* Write value <cardnumber> to element "monnetCreditCard"
* Write value <cvvNumber> to element "monnetCvv"
* Write value <cardexpiration> to element "cardExpirationMonnet"
* Wait "5" seconds
* Wait for element then click "cuntinueButtonMonnet"
* Wait "4" seconds

# Enter Bank Account Information <cusID> for APS
* Wait "10" seconds
* Write value <cusID> to element "customerID"
* Wait for element then click "customerIDType"
* Wait "2" seconds
* Wait for element then click "listOfCustomerIDType"
* Wait for element then click "payButton"
* Wait "25" seconds

# Click Back Trade And Redirect to website
* Wait for element then click "backTrade"

# Enter Credit Card İnformation with <cardno>, <cvvNo> and <cardexpirationno> APS
* Wait "10" seconds
* Write value <cardno> to element "ApsCreditCard"
* Write value <cvvNo> to element "ApsCvv"
* Write value <cardexpirationno> to element "cardExpirationAPS"
* Wait "5" seconds
* Wait for element then click "cuntinueButtonMonnet"
* Wait "4" seconds

# Select the bank option and enter bank card info <cardnumber> for APS debit
* Wait for element then click "bankListForDebitAPS"
* Wait "2" seconds
* Wait for element then click "bankOptionForDebitAPS"
//* Pick the one of elements "bankOptionForDebitMonnet" randomly
* Write value <cardnumber> to element "cardNumberForDebitAPS"
* Wait for element then click "pagarButtonToContinuePayment"


#Select to the installment option
* Wait for element then click "installmentButtonMonnet"
* Wait for element then click "selectInstallmentOptionMonnet"
* Wait for element then click "allowInstallmentOptionMonnet"
* Wait "2" seconds
* Wait for element then click "allowPaymentMonnet"
* Wait "10" seconds

# Enter Rut and Clave info at Welcome of TransBank page
* Write value "111111111" to element "rutClient"
* Write value "123" to element "claveClient"
* Wait "2" seconds
* Debug Step
* Click to the defined element with "acceptPaymentLastPage"

# Accept the option on TransBank page to be done the payment
* Wait for element then click "continuePaymentLastPage"
* Wait "20" seconds

//# Enter New Credit Card İnformation with <cardnumber>
//* Find element by "creditCardNumber" clear and send keys <cardnumber>
//* Find element by "ownerNameOfCard" clear and send keys "Test"
//* Elementine tıkla "newCardAdd"
//* Elementine tıkla "saveButton"
//* "5" saniye bekle
//* Elementine tıkla "saveButton"


# Enter Credit Card İnformation with <cardnumber>, <cardownername> and <cvvNumber>
* Wait "10" seconds
* Write value <cardnumber> to element "creditCardNumber"
//* Find element by "creditCardNumber" clear and send keys <cardnumber>
//* Find element by "ownerNameOfCard" clear and send keys "Test"
* Wait "2" seconds
* Write value <cardownername> to element "ownerNameOfCard"
* Write value <cvvNumber> to element "cvvField"
* Pick the one of elements "monthField" randomly
* Pick the one of elements "yearField" randomly
//* select month from list "monthField"
//* select year from list "yearField"
* Wait for element then click "buttonContinue"
* Wait "10" seconds

# Enter Credit Card İnformation with <cardnumber>, <cardownername> and <cvvNumber> apco
* Wait "5" seconds
* Write value <cardnumber> to element "apcoCreditCard"
//* Find element by "creditCardNumber" clear and send keys <cardnumber>
//* Find element by "ownerNameOfCard" clear and send keys "Test"
* Write value <cardownername> to element "apcoOwnerName"
* Write value <cvvNumber> to element "apcoCvv"
* Pick the one of elements "monthOptionsApco" randomly
* Pick the one of elements "yearOptionsApco" randomly
* Wait "5" seconds
* Wait for element then click "submitBtnApco"
* Wait "5" seconds



# Enter Digipass Code with
* Wait "5" seconds
* Click to the defined element with "digiPassCode"
* Send the text to the password field with "digiPassCode"
//* Write value <passCode> to element "digiPassCode"
* Wait for element then click "submitButton"
* Wait "10" seconds



//# Enter Credit Card İnformation with <cardnumber>, <cardownername> and <cvvNumber> apco
//* Wait "10" seconds
//* Write value <cardnumber> to element "apcoCreditCard"
////* Find element by "creditCardNumber" clear and send keys <cardnumber>
////* Find element by "ownerNameOfCard" clear and send keys "Test"
//* Write value <cardownername> to element "apcoOwnerName"
//* Write value <cvvNumber> to element "apcoCvv"
//* Pick the one of elements "monthOptionsApco" randomly
//* Pick the one of elements "yearOptionsApco" randomly
//* Wait "10" seconds
//* Wait for element then click "submitBtnApco"
//
//# Select the Identity Type and Enter the Identity Number
//* Pick the one of elements "optionsOfIdentityTypeForMonnet" randomly
//* Find element by "identityNumberForMonnet" clear and send keys "111111111"


//# Select to the credit option for deposit method
//* Wait for element then click "creditoForMonnet"

//# Enter Credit Card İnformation with <cardnumber>, <cvvNumber> and <cardexpiration> monnet
//* Wait "10" seconds
//* Write value <cardnumber> to element "monnetCreditCard"
//* Write value <cvvNumber> to element "monnetCvv"
//* Write value <cardexpiration> to element "cardExpirationMonnet"
//* Wait "5" seconds
//* Wait for element then click "cuntinueButtonMonnet"
//* Wait "4" seconds
//* Wait for element then click "taksitButtonMonnet"
//* Wait for element then click "selectTaksitOptionMonnet"
//* Wait for element then click "allowTaksitOptionMonnet"
//* Wait "2" seconds
//* Wait for element then click "allowPaymentMonnet"
//* Wait "10" seconds
////* Dismiss Chrome alert popup
//* Write value "111111111" to element "rutClient"
//* Write value "123" to element "claveClient"
//* Wait "2" seconds
//* Debug Step
////* Disabled wallet card
//* Click to elementtry "acceptPaymentLastPage"
////* Dismiss Chrome alert popup
////* Click to element "acceptPaymentLastPage"
////* Wait for element then click "acceptPaymentLastPage"
//* Wait for element then click "continuePaymentLastPage"
//*Wait "15" seconds

# Verify the deposit information and continue the main site
* Wait for element then click "continueButtonOnLastDepositPage"

# Compare the entered withdrawal amount <saveKey> to amount <saveKeyy> which inside the transactions info by converted text <key>
* Find element by <key> and converted the value than save the converted text <saveKeyy>
* Compare saved key <saveKey> contains the other saved key <saveKeyy> of element


# Get Transaction Number In Withdrawal Page
* Wait "2" seconds
* Find element by "transactionNumber" and save text "transactionNumber"

# Complete the transaction
* Wait for element then click "performTransaction"

# Compare the transactions numbers
* Wait for element then click "bookingPage"
* Find element by "firstTransactionInBookingPage" and compare saved key "transactionNumber" contains the text of element

# Select the Card and Enter the Missing Number
* Wait for element then click "cardInWithdrawalPage"
* Wait "2" seconds
* Pick the one of elements "lifOfCardInWithdrawalPage" randomly excluding first option
* Write value "000000" to element "missingCardNumberInWithdrawalPage"

# Select the Card Expiration Date For Month
* Wait for element then click "monthInWithdrawalPage"
* Wait "2" seconds
* Pick the one of elements "listOfMonthsInWithdrawalPage" randomly excluding first option
* Wait "5" seconds

# Select the Card Expiration Date For Year
//* Pick the one of elements "listOfMonthsInWithdrawalPage" randomly excluding first option
//* Pick the one of elements "listOfYearInWithdrawalPage" randomly
* Wait for element then click "yearInWithdrawalPage"
* Wait "2" seconds
* Select the one of elements randomly regarding "listOfYearInWithdrawalPage" size in the dropdown list
//* Select the option by value "2024" from the list "yearInWithdrawalPage"
* Wait "2" seconds

# Calculate the balance
* Caculate the balance after Withdrawal by "balanceInAccount" and "randomNumber" and save the value "savedBalance"






